{
	"info": {
		"_postman_id": "election-api-collection",
		"name": "Election API .NET - Complete Collection",
		"description": "Cole√ß√£o completa da API de Elei√ß√µes com autentica√ß√£o autom√°tica e scripts de gerenciamento de tokens",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{authToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Script global de pr√©-requisi√ß√£o",
					"// Verifica se h√° token v√°lido antes de fazer requisi√ß√µes autenticadas",
					"",
					"const requestUrl = pm.request.url.toString();",
					"const isLoginRequest = requestUrl.includes('/api/auth/');",
					"",
					"if (!isLoginRequest) {",
					"    const token = pm.globals.get('authToken');",
					"    if (!token) {",
					"        console.log('‚ö†Ô∏è Token n√£o encontrado. Fa√ßa login primeiro.');",
					"    }",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:5000",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "üîê Authentication",
			"item": [
				{
					"name": "Admin Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Script para armazenar token automaticamente ap√≥s login",
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.data && response.data.token) {",
									"        pm.globals.set('authToken', response.data.token);",
									"        pm.globals.set('userId', response.data.userId);",
									"        pm.globals.set('userRole', 'admin');",
									"        console.log('‚úÖ Login Admin realizado com sucesso!');",
									"        console.log('üîë Token armazenado automaticamente');",
									"        console.log('‚è∞ Token expira em 59 minutos');",
									"    }",
									"} else {",
									"    console.log('‚ùå Erro no login Admin');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@election.com\",\n    \"password\": \"Admin123!\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/admin/login",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "admin", "login"]
						},
						"description": "Login do administrador - Token v√°lido por 59 minutos"
					}
				},
				{
					"name": "Voter Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Script para armazenar token automaticamente ap√≥s login",
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.data && response.data.token) {",
									"        pm.globals.set('authToken', response.data.token);",
									"        pm.globals.set('userId', response.data.userId);",
									"        pm.globals.set('userRole', 'voter');",
									"        console.log('‚úÖ Login Voter realizado com sucesso!');",
									"        console.log('üîë Token armazenado automaticamente');",
									"        console.log('‚è∞ Token expira em 10 minutos');",
									"    }",
									"} else {",
									"    console.log('‚ùå Erro no login Voter');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"voter@example.com\",\n    \"password\": \"Voter123!\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/voter/login",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "voter", "login"]
						},
						"description": "Login do eleitor - Token v√°lido por 10 minutos"
					}
				},
				{
					"name": "Clear Tokens",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Script para limpar tokens armazenados",
									"pm.globals.unset('authToken');",
									"pm.globals.unset('userId');",
									"pm.globals.unset('userRole');",
									"console.log('üßπ Tokens removidos do ambiente');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/health",
							"host": ["{{baseUrl}}"],
							"path": ["health"]
						},
						"description": "Endpoint para limpar tokens armazenados"
					}
				}
			],
			"description": "Endpoints de autentica√ß√£o com scripts autom√°ticos para gerenciamento de tokens"
		},
		{
			"name": "‚öôÔ∏è Elections Management",
			"item": [
				{
					"name": "Get All Elections",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/election",
							"host": ["{{baseUrl}}"],
							"path": ["api", "election"]
						}
					}
				},
				{
					"name": "Get Election by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/election/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "election", "1"]
						}
					}
				},
				{
					"name": "Create Election",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Elei√ß√£o Municipal 2024\",\n    \"description\": \"Elei√ß√£o para prefeito e vereadores\",\n    \"startDate\": \"2024-10-01T08:00:00Z\",\n    \"endDate\": \"2024-10-01T17:00:00Z\",\n    \"status\": \"scheduled\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/election",
							"host": ["{{baseUrl}}"],
							"path": ["api", "election"]
						}
					}
				},
				{
					"name": "Update Election",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Elei√ß√£o Municipal 2024 - Atualizada\",\n    \"description\": \"Elei√ß√£o para prefeito e vereadores - Vers√£o atualizada\",\n    \"startDate\": \"2024-10-01T08:00:00Z\",\n    \"endDate\": \"2024-10-01T17:00:00Z\",\n    \"status\": \"scheduled\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/election/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "election", "1"]
						}
					}
				},
				{
					"name": "Delete Election",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/election/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "election", "1"]
						}
					}
				}
			]
		},
		{
			"name": "üó≥Ô∏è Secure Voting System",
			"item": [
				{
					"name": "Voter Login (Voting Portal)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.data && response.data.token) {",
									"        pm.globals.set('voterToken', response.data.token);",
									"        pm.globals.set('voterId', response.data.voterId);",
									"        console.log('‚úÖ Login do eleitor realizado!');",
									"        console.log('‚è∞ Token expira em 10 minutos');",
									"    }",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"cpf\": \"12345678901\",\n    \"password\": \"Voter123!\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/voting/login",
							"host": ["{{baseUrl}}"],
							"path": ["api", "voting", "login"]
						}
					}
				},
				{
					"name": "Get Election Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/voting/election/1/status",
							"host": ["{{baseUrl}}"],
							"path": ["api", "voting", "election", "1", "status"]
						}
					}
				},
				{
					"name": "Cast Vote",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{voterToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"electionId\": 1,\n    \"positionId\": 1,\n    \"candidateId\": 1,\n    \"voteType\": \"candidate\",\n    \"justification\": \"\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/voting/cast-vote",
							"host": ["{{baseUrl}}"],
							"path": ["api", "voting", "cast-vote"]
						}
					}
				},
				{
					"name": "Get Vote Receipt",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{voterToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/voting/receipt/RECEIPT_TOKEN_HERE",
							"host": ["{{baseUrl}}"],
							"path": ["api", "voting", "receipt", "RECEIPT_TOKEN_HERE"]
						}
					}
				},
				{
					"name": "Seal Election (Admin)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/voting/admin/seal-election/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "voting", "admin", "seal-election", "1"]
						}
					}
				},
				{
					"name": "Generate Zero Report (Admin)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/voting/admin/zero-report/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "voting", "admin", "zero-report", "1"]
						}
					}
				},
				{
					"name": "Validate Election Integrity (Admin)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/voting/admin/validate-integrity/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "voting", "admin", "validate-integrity", "1"]
						}
					}
				}
			]
		},
		{
			"name": "üìß Email System",
			"item": [
				{
					"name": "Send Individual Email",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"to\": \"eleitor@example.com\",\n    \"subject\": \"Confirma√ß√£o de Cadastro\",\n    \"body\": \"Seu cadastro foi realizado com sucesso!\",\n    \"isHtml\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/email/send",
							"host": ["{{baseUrl}}"],
							"path": ["api", "email", "send"]
						}
					}
				},
				{
					"name": "Send Bulk Email",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"subject\": \"Lembrete de Elei√ß√£o\",\n    \"body\": \"N√£o esque√ßa de votar! A elei√ß√£o acontece amanh√£.\",\n    \"isHtml\": true,\n    \"targets\": [\n        {\n            \"email\": \"eleitor1@example.com\",\n            \"name\": \"Jo√£o Silva\"\n        },\n        {\n            \"email\": \"eleitor2@example.com\",\n            \"name\": \"Maria Santos\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/email/bulk-send",
							"host": ["{{baseUrl}}"],
							"path": ["api", "email", "bulk-send"]
						}
					}
				},
				{
					"name": "Send Template Email",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"to\": \"eleitor@example.com\",\n    \"templateName\": \"election_reminder\",\n    \"variables\": {\n        \"name\": \"Jo√£o Silva\",\n        \"electionDate\": \"01/10/2024\",\n        \"electionTime\": \"08:00 √†s 17:00\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/email/send-template",
							"host": ["{{baseUrl}}"],
							"path": ["api", "email", "send-template"]
						}
					}
				},
				{
					"name": "Test Email Configuration",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/email/test",
							"host": ["{{baseUrl}}"],
							"path": ["api", "email", "test"]
						}
					}
				}
			]
		},
		{
			"name": "üìä Audit Reports",
			"item": [
				{
					"name": "Get Audit Logs",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/report/audit-logs?page=1&pageSize=50&action=login",
							"host": ["{{baseUrl}}"],
							"path": ["api", "report", "audit-logs"],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "pageSize",
									"value": "50"
								},
								{
									"key": "action",
									"value": "login"
								}
							]
						}
					}
				},
				{
					"name": "Get Audit Statistics",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/report/audit-statistics",
							"host": ["{{baseUrl}}"],
							"path": ["api", "report", "audit-statistics"]
						}
					}
				},
				{
					"name": "Get Security Report",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/report/security-report",
							"host": ["{{baseUrl}}"],
							"path": ["api", "report", "security-report"]
						}
					}
				},
				{
					"name": "Export Audit Data",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"format\": \"csv\",\n    \"includeDetails\": true,\n    \"startDate\": \"2024-01-01T00:00:00Z\",\n    \"endDate\": \"2024-12-31T23:59:59Z\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/report/export",
							"host": ["{{baseUrl}}"],
							"path": ["api", "report", "export"]
						}
					}
				}
			]
		},
		{
			"name": "üë• Users Management",
			"item": [
				{
					"name": "Get All Voters",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/voter",
							"host": ["{{baseUrl}}"],
							"path": ["api", "voter"]
						}
					}
				},
				{
					"name": "Create Voter",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Jo√£o Silva\",\n    \"email\": \"joao@example.com\",\n    \"cpf\": \"12345678901\",\n    \"password\": \"Voter123!\",\n    \"birthDate\": \"1990-01-01\",\n    \"phone\": \"11999999999\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/voter",
							"host": ["{{baseUrl}}"],
							"path": ["api", "voter"]
						}
					}
				}
			]
		},
		{
			"name": "üèõÔ∏è Positions & Candidates",
			"item": [
				{
					"name": "Get All Positions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/position",
							"host": ["{{baseUrl}}"],
							"path": ["api", "position"]
						}
					}
				},
				{
					"name": "Create Position",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Prefeito\",\n    \"description\": \"Cargo de prefeito municipal\",\n    \"electionId\": 1,\n    \"maxCandidates\": 1,\n    \"isActive\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/position",
							"host": ["{{baseUrl}}"],
							"path": ["api", "position"]
						}
					}
				},
				{
					"name": "Get All Candidates",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/candidate",
							"host": ["{{baseUrl}}"],
							"path": ["api", "candidate"]
						}
					}
				},
				{
					"name": "Create Candidate",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Jo√£o da Silva\",\n    \"number\": \"12\",\n    \"party\": \"Partido ABC\",\n    \"positionId\": 1,\n    \"isActive\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/candidate",
							"host": ["{{baseUrl}}"],
							"path": ["api", "candidate"]
						}
					}
				}
			]
		},
		{
			"name": "üè• System Health",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/health",
							"host": ["{{baseUrl}}"],
							"path": ["health"]
						}
					}
				},
				{
					"name": "API Info",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/",
							"host": ["{{baseUrl}}"]
						}
					}
				}
			]
		}
	]
}