version: '3.8'

# Production Docker Compose Configuration
# Optimized for production deployment with security, performance and monitoring

services:
  db:
    image: mysql:8.0
    container_name: mysql-election-system-prod-v${APP_VERSION:-1.1.2}
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_EXTERNAL_PORT:-3306}:3306"
    volumes:
      - mysql_data_prod:/var/lib/mysql
      - mysql_config_prod:/etc/mysql/conf.d
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
      - ./mysql/prod.cnf:/etc/mysql/conf.d/prod.cnf:ro
    command: >
      --default-authentication-plugin=mysql_native_password 
      --innodb-buffer-pool-size=512M 
      --max_connections=1000
      --innodb-log-file-size=256M
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --innodb-flush-log-at-trx-commit=2
      --sync-binlog=0
      --innodb-doublewrite=1
      --log-bin=mysql-bin
      --server-id=1
      --expire_logs_days=7
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD}"]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 60s
    networks:
      - election-network-prod
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  api:
    build: 
      context: .
      dockerfile: Dockerfile
      args:
        APP_VERSION: ${APP_VERSION:-1.1.2}
        BUILD_DATE: ${BUILD_DATE}
        BUILD_CONFIGURATION: Release
      target: runtime
    image: electionapinet-api:${APP_VERSION:-1.1.2}
    container_name: election-api-prod-v${APP_VERSION:-1.1.2}
    ports:
      - "${API_EXTERNAL_PORT:-5110}:5110"
    depends_on:
      db:
        condition: service_healthy
    environment:
      # Database Configuration
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      
      # JWT Configuration
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_ISSUER: ${JWT_ISSUER:-ElectionApi}
      JWT_AUDIENCE: ${JWT_AUDIENCE:-ElectionApiUsers}
      JWT_EXPIRE_MINUTES: ${JWT_EXPIRE_MINUTES:-60}
      
      # SMTP Configuration
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_ENABLE_SSL: ${SMTP_ENABLE_SSL:-true}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SMTP_FROM_EMAIL: ${SMTP_FROM_EMAIL}
      SMTP_FROM_NAME: ${SMTP_FROM_NAME:-Sistema de Eleições}
      
      # Vote Encryption Keys
      VOTE_MASTER_KEY: ${VOTE_MASTER_KEY}
      VOTE_JUSTIFICATION_KEY: ${VOTE_JUSTIFICATION_KEY}
      
      # Swagger Configuration (disabled in production by default)
      SWAGGER_USERNAME: ${SWAGGER_USERNAME:-admin}
      SWAGGER_PASSWORD: ${SWAGGER_PASSWORD}
      ENABLE_SWAGGER: ${ENABLE_SWAGGER:-false}
      
      # Environment Settings
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_URLS: http://0.0.0.0:5110
      
      # Hybrid Photo System Settings
      MAX_PHOTO_SIZE_MB: ${MAX_PHOTO_SIZE_MB:-10}
      PHOTO_QUALITY: ${PHOTO_QUALITY:-85}
      MAX_PHOTO_WIDTH: ${MAX_PHOTO_WIDTH:-800}
      MAX_PHOTO_HEIGHT: ${MAX_PHOTO_HEIGHT:-600}
      
      # System Seal Configuration
      SYSTEM_SEAL_SECRET: ${SYSTEM_SEAL_SECRET}
      
      # 2FA Configuration
      TWO_FACTOR_TOKEN_EXPIRY_MINUTES: ${TWO_FACTOR_TOKEN_EXPIRY_MINUTES:-5}
      
      # API Features
      API_VERSION: ${APP_VERSION:-1.1.2}
      API_BUILD_DATE: ${BUILD_DATE}
      
      # Production optimizations
      DOTNET_RUNNING_IN_CONTAINER: true
      DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: false
      DOTNET_gcServer: true
      DOTNET_gcConcurrent: true
      
    volumes:
      - photo_uploads_prod:/app/wwwroot/uploads
      - app_logs_prod:/app/logs
    restart: unless-stopped
    networks:
      - election-network-prod
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5110/health/ready", "||", "exit", "1"]
      timeout: 10s
      retries: 5
      interval: 30s
      start_period: 120s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.25'
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: nginx-election-proxy-v${APP_VERSION:-1.1.2}
    profiles:
      - with-proxy
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - api
    networks:
      - election-network-prod
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health", "||", "exit", "1"]
      timeout: 10s
      retries: 3
      interval: 30s
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"

  # Optional: Redis cache for session management
  redis:
    image: redis:7-alpine
    container_name: redis-election-cache-v${APP_VERSION:-1.1.2}
    profiles:
      - with-cache
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data_prod:/data
    networks:
      - election-network-prod
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      timeout: 10s
      retries: 3
      interval: 30s
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 64M
          cpus: '0.1'
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"

networks:
  election-network-prod:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: election-prod-br0
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  mysql_data_prod:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${MYSQL_DATA_PATH:-./data/mysql}
  mysql_config_prod:
    driver: local
  photo_uploads_prod:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${UPLOADS_PATH:-./data/uploads}
  app_logs_prod:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${LOGS_PATH:-./data/logs}
  redis_data_prod:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${REDIS_DATA_PATH:-./data/redis}